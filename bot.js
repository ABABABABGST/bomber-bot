// –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞—Ñ. *–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π*

const { Telegraf, Markup } = require('telegraf') // —Ä–µ–∫–≤–∞–π—Ä–∏–º —Å–∞–º —Ç–µ–ª–µ–≥—Ä–∞—Ñ
const fs = require('fs')
const bomber = require('bomber-api') // —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ —Ç–æ, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –∏ –±—É–¥—É—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è "–±–æ–º–±–∞—Ä–¥–∏—Ä–æ–≤–∫–∏"


// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞

const cfg = require(`./config/config.json`) // —Ä–µ–∫–≤–∞–π—Ä–∏–º –∫–æ–Ω—Ñ–∏–≥
const request = require(`request`)
if (!cfg.token || !cfg.adminlist) return console.log(`–§–æ—Ä–º–∞—Ç –∫–æ–Ω—Ñ–∏–≥–∞ –±—ã–ª –ø–æ–≤—Ä–µ–∂–¥—ë–Ω.`) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
const data = new Date() // –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–∏–∑–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
const bot = new Telegraf(cfg.token) // –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞

bot.launch().then(() => {
    bot.telegram.getMe().then(x => {
        console.log(`[i] –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è –ø–æ–¥ ${x.username}`)
    })
})

// –ì–ª–∞–≤–Ω–∞—è —á–∞—Å—Ç—å –±–æ—Ç–∞

bot.on('message', ctx => {

    if (data > ctx.message.date * 1000) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–∏–∑–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
        return;
    }

    if (ctx.message.text == undefined || ctx.message.text == null || ctx.message.text == "") { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        return;
    }

    ctx.message.args = ctx.message.text.toLowerCase().split(" ") // –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è

    if (ctx.message.from.is_bot) { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –±–æ—Ç–æ–≤
        return;
    }

    if (ctx.message.chat.id != ctx.message.from.id) { // –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≥—Ä—É–ø–ø–∞—Ö, —Ç–æ–ª—å–∫–æ –≤ –ª—Å.
        return;
    }

    let uid = ctx.message.from.id // –ó–∞–¥–∞—ë–º –∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é uid –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞


    if (!cfg.adminlist.includes(uid)) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ –∞–¥–º–∏–Ω –ª–∏—Å—Ç–µ
        return ctx.reply(`–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.`)
    }

    if (ctx.message.args[0] == `/help`) {
        return ctx.reply(`
üìë–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:
/–±–æ–º–±–µ—Ä (–Ω–æ–º–µ—Ä) (–∫–æ–ª-–≤–æ –∫—Ä—É–≥–æ–≤) - –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ–º–±–µ—Ä –Ω–∞ –Ω–æ–º–µ—Ä
/—Å—Ç–æ–ø (–Ω–æ–º–µ—Ä) - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ–º–±–µ—Ä –Ω–∞ –Ω–æ–º–µ—Ä
/–∞—Ç–∞–∫–∏ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∞—Ç–∞–∫–∏
ü§ómade with ‚ù§ by <a href="https://github.com/slpkbt">slpkbt</a>`, { parse_mode: "HTML" })
    }else
    if (ctx.message.args[0] == `/–±–æ–º–±–µ—Ä`) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∏

        if (!ctx.message.args[1]) return ctx.reply(`‚ùå–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /–±–æ–º–±–µ—Ä (–Ω–æ–º–µ—Ä) (–∫–æ–ª-–≤–æ –∫—Ä—É–≥–æ–≤)`)
        let num = ctx.message.args[1].replace(`+`, ``).replaceAll(` `, ``).replaceAll(`-`, ``) // –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–ª—é—Å–∏–∫ —Ä–µ–ø–ª–µ–π—Å–∏–º –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–≤–µ—Å—Ç–∞
        if (num.length > 12) return ctx.reply(`‚ùå–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ–≤–µ—Ä–µ–Ω!\n–ü—Ä–∏–º–µ—Ä: +799999999999\n–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –Ω–æ–º–µ—Ä –±–µ–∑ —Å–∫–æ–±–æ–∫ –∏ —Ç–∏—Ä–µ!`)
        if (!ctx.message.args[2]) return ctx.reply(`‚ùå–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /–±–æ–º–±–µ—Ä (–Ω–æ–º–µ—Ä) (–∫–æ–ª-–≤–æ –∫—Ä—É–≥–æ–≤)`)
        if (!Number(ctx.message.args[2])) return ctx.reply(`‚ùå–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /–±–æ–º–±–µ—Ä (–Ω–æ–º–µ—Ä) (–∫–æ–ª-–≤–æ –∫—Ä—É–≥–æ–≤)`)

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–æ–º–±–µ—Ä—É –Ω–∞ –Ω–∞—á–∞–ª–æ –∞—Ç–∞–∫–∏
        
        request(`http://localhost:3000/attack?number=${num}&loops=${Number(ctx.message.args[2])}`, function (e, r, b) {

            if (e) {
                return ctx.reply(`‚ùå–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏.`)
            }

            let p = JSON.parse(b)

            if(p.success){
                return ctx.reply(`‚úÖ–ü–æ–ª—É—á–µ–Ω –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞!\nüìë${p.text}`)
            }else{
                return ctx.reply(`‚ùå–ü–æ–ª—É—á–µ–Ω –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞!\nüìë${p.text}`)
            }

        })
    }else
    if(ctx.message.args[0] == `/–∞—Ç–∞–∫–∏`){
        request(`http://localhost:3000/list`,function(e,r,b){

            if (e) {
                return ctx.reply(`‚ùå–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏.`)
            }
            
            let p = JSON.parse(b)

            if(!p.success){
                return ctx.reply(`‚ùå–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞—Ç–∞–∫ –ø—É—Å—Ç`)
            }else{

                let text = ``

                p.result.forEach(e=>{
                    text+=`üì≤${e.number}/${e.loop}/${new Date(e.startedAt).getHours() + ":" + new Date(e.startedAt).getMinutes() + ":" + new Date(e.startedAt).getSeconds()}\n` // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –Ω—É–∂–Ω—ã–π –Ω–∞–º —Ñ–æ—Ä–º–∞—Ç
                })

                return ctx.reply(`‚úÖ–§–æ—Ä–º–∞—Ç (–Ω–æ–º–µ—Ä:–∫–æ–ª-–≤–æ –∫—Ä—É–≥–æ–≤:–¥–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞)\n${text}`)

            }
        })
    }else
    if(ctx.message.args[0] == `/—Å—Ç–æ–ø`){
        if(!ctx.message.args[1]) return ctx.reply(`‚ùå–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /—Å—Ç–æ–ø (–Ω–æ–º–µ—Ä)`)
        let num = ctx.message.args[1].replace(`+`, ``).replaceAll(` `, ``).replaceAll(`-`, ``)
        if(!Number(num)) return ctx.reply(`‚ùå–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /—Å—Ç–æ–ø (–Ω–æ–º–µ—Ä)`)
        request(`http://localhost:3000/stop?number=${num}`,function(e,r,b){

            if (e) {
                return ctx.reply(`‚ùå–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏.`)
            }
            
            let p = JSON.parse(b)

            if(!p.success){
                return ctx.reply(`‚ùå${p.text}`)
            }else{

                return ctx.reply(`‚úÖ${p.text}`)

            }
        })
    }else{
        return ctx.reply(`‚ùå–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –Ω–∞ /help`)
    }
})

